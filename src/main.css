/* css-tensei: main.css
 * SPDX-License-Identifier: NCSA */

:root {
  /* this font stack respects user choice and uses the fonts set in the web
   * browser settings
   *
   * if a "sensible" default is preferable, the following font stack might work
   * --sans-font: -apple-system, BlinkMacSystemFont, "Segoe UI", Inter, sans-serif;
   * --mono-font: Menlo, "Cascadia Mono", Consolas, "IBM Plex Mono", monospace;
   * --serif-font: Baskerville, "Cambria", "Source Serif Pro", serif; */
  --sans-font: sans-serif;
  --mono-font: monospace, monospace;
  --serif-font: serif;

  /* increase body text line-height to meet the minimum criteria of at least
   * 1.5 line height and to account for increased padding in some inline
   * elements such as <code>
   * reduce line-height of headings to account for their increased font size */
  --height-text: 1.6;
  --height-head: 1.2;
  --height-text-print: 1.3;
  --height-head-print: 1.1;

  /* start increasing the base font size of 16px (1rem) from a 390px width
   * viewport to a maximum of 18px (1.125rem) ending at 1024px width viewport
   *
   * this has been done to account for the difference in viewing distance
   * between a touch device and a monitor display. although 18px on touch
   * devices is fine, we can get a more characters and words on a single line
   * on touch devices if we scale back to 16px, which is the minimum acceptable
   * font size.
   *
   * using the clamp function saves us from defining multiple media query
   * breakpoints
   * https://www.aleksandrhovhannisyan.com/blog/fluid-type-scale-with-css-clamp/ */
  --base-font-size: clamp(1rem, calc(0.923rem + 0.315vw), 1.125rem);

  /* make <h*> sizes consistent and ignore the visual-only implementation of
   * the HTML5 document outlining algorithm which reduces the size of <h1>
   * successively when it's nested inside <article>, <aside>, <nav>, and
   * <section>
   *
   * although multiple <h1> tags shouldn't be used on a single HTML page, if
   * they are, we won't make the size of <h1> different
   *
   * the type scale of 1.2 (minor third) has been used to try and stay close to
   * the browser default size while also increasing the size of <h4>, <h5>, and
   * <h6> in an attempt to make them more useful
   * a type scale of 1.333 and above makes headings unusually large and
   * obnoxious
   * a height of 111 pixels in <h1> doesn't make sense
   *
   * https://www.smashingmagazine.com/2020/01/html5-article-section/ */
  --h1-size: 2.074rem;
  --h2-size: 1.728rem;
  --h3-size: 1.44rem;
  --h4-size: 1.2rem;
  --h5-size: 1rem;
  --h6-size: 0.833rem;

  /* fix the margin of <h1> inside <section>s */
  --h1-margin: 0.67em;

  /* reduce the browser default inline margin of elements such as <dd>, <ol>,
   * and <ul> on mobile to make room for more characters on a line and
   * gradually increase the margin to the browser default on desktop sized
   * viewports */
  --first-level-space: clamp(1.5em, calc(1.16em + 1.7vw), 2.25em);
  --second-level-space: clamp(1em, calc(0.69em + 1.56vw), 1.69em);

  /* the colors have been carefully chosen to meet the following requirements:
   * - avoid halation issues in dark mode
   * - distinguishable colors, even for color blind users
   * - avoid highly saturated colors to prevent Helmholtz-Kohlrausch effect
   * - the primary colors should be perceptually uniform in CIELAB color space
   * - avoid layout shift at all costs, even when it results from abrupt color
   *   changes (blue -> red) due to monitor LED arrangement or sub-pixel
   *   anti-aliasing
   * - reduce hyperlink underline opacity to improve readability in cases where
   *   several hyperlinks are used inside a paragraph
   *   https://memex.marginalia.nu/log/00-linkpocalypse.gmi
   *
   * the default light and dark theme aim for APCA Lc ~90 for body text
   * the lesser contrast themes aim for APCA Lc ~80 for body text
   * https://www.myndex.com/APCA/ */

  /* primary colors */
  --bg-text: #f8f8f8;
  --fg-text: #2b2b2b; /* Lc 96.7, deliberately higher Lc for better contrast */
  --fg-link: #0000d9; /* Lc 86.7, relatively higher saturation */
  --fg-link-v: #40259c; /* Lc 89.7 against bg-text */
  --fg-ins: #114a1b; /* Lc 89.6 */
  --fg-del: #7d0800; /* Lc 89.3 */
  --bg-mark: #fff2ca;
  --fg-mark: #473021; /* Lc 90.3 */

  /* secondary colors */
  --bg-form: #fcfcfc;
  --bg-link-a: #efecf3;
  --fg-table-grid: #2c2c2c; /* Lc 90, used with bg-link-a on grid tables */
  --fg-hsb: #535353; /* Lc 82.6, meets APCA requirements at 14px 700 weight */
  --fg-border: #aaa; /* Lc 41.6, meets APCA requirements for non-text */
  --fg-border-err: #e36e66; /* Lc 53.8, meets APCA requirements for non-text */
  --bg-dis: #d4d4d4;
  --fg-dis: #686868; /* Lc 52.8, meets APCA requirements for disabled text */
  --fg-link-undl: #0000d980;
  --fg-link-v-undl: #40259c80;

  /* print colors */
  --bg-print: #fff;
  --fg-print: #000;
}

@media (prefers-color-scheme: dark) {
  :root {
    /* primary colors */
    --bg-text: #1c1c1d;
    --fg-text: #e6e6e6; /* Lc -90.1 */
    --fg-link: #f3e6b5; /* Lc -90 */
    --fg-link-v: #dec567; /* Lc -70.6 against bg-text, deliberately low Lc */
    --fg-ins: #c9ecff; /* Lc -90.5 */
    --fg-del: #ffc9c9; /* Lc -80.2, hard to find red against black with Lc >=90 */
    --bg-mark: #203448;
    --fg-mark: #d9f1ff; /* Lc -90.5 */

    /* secondary colors */
    --bg-form: #292929;
    --bg-link-a: #252524;
    --fg-table-grid: #e8e8e8; /* Lc -90.1 */
    --fg-hsb: #d6d6d6; /* Lc -80.1, meets APCA requirements at 14px 700 weight */
    --fg-border: #7a7a7a; /* Lc -30.4, sufficient contrast in dark mode */
    --fg-border-err: #e36e66; /* Lc -42.2 */
    --bg-dis: #111112;
    --fg-dis: #777774; /* Lc -30, min APCA compliant contrast for disabled text */
    --fg-link-undl: #f3e6b580;
    --fg-link-v-undl: #dec56780;
  }
}

/* alphabetical ordering of CSS declarations sounds nice in theory but breaks
 * down at scale while also hurting readability
 * https://blog.jim-nielsen.com/2022/ordering-css-delcarations/ */

/* we'll use `rem` for global font sizing and `em` for local margins, padding,
 * gaps etc
 * https://clagnut.com/blog/2384/
 * using `ch` makes sense only if we're using monospace fonts because `1ch` is
 * usually wider by 20-30% in proportional typefaces
 * https://meyerweb.com/eric/thoughts/2018/06/28/what-is-the-css-ch-unit/ */

html {
  /* switch to border-box instead of content-box to make box size, margins, and
   * padding more intuitive */
  box-sizing: border-box;

  /* never use serif fonts on screen unless it's possible to ensure that a
   * High DPI monitor is in use
   *
   * don't switch to serif fonts using min-resolution and
   * -webkit-min-device-pixel-ratio because they apply even if a user doesn't
   * have a high DPI screen and simply zooms in the page to a large value
   *
   * it's better to just use some CSS/JS and allow users to switch to a serif
   * font if they want like https://chrismorgan.info/ */
  font: var(--base-font-size) / var(--height-text) var(--sans-font);

  /* don't inflate text in landscape mode
   * https://archive.ph/gwL4y */
  /* stylelint-disable property-no-vendor-prefix */
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
  /* stylelint-enable property-no-vendor-prefix */

  /* reduce the tab size from 8 to 4 to accomodate more characters */
  tab-size: 4;
}

/* facilitates overriding box-sizing if needed and ensures that child elements
 * inherit the overridden box-sizing property of a parent element */
*,
*::before,
*::after {
  box-sizing: inherit;
}

/* although text-align: justify might look nice, don't use it because it hurts
 * readability for people with dyslexia
 * https://archive.ph/NRM5I */
body {
  /* prevent text overflow by wrapping text when needed */
  overflow-wrap: break-word;
}

/* distinguish table header cells, definition term, and var by increasing
 * font-weight to 600
 * if 600 isn't available, 700 should be chosen by the browser automatically */
:not(pre, code, samp) > table th,
kbd, /* <kbd>'s font size is reduced later, compensate by increasing weight */
dfn,
dt,
legend,
var {
  font-weight: 600;
}

h1 {
  font-size: var(--h1-size);
  margin-top: var(--h1-margin);
  margin-bottom: var(--h1-margin);
}

h2 {
  font-size: var(--h2-size);
}

h3 {
  font-size: var(--h3-size);
}

h4 {
  font-size: var(--h4-size);
}

h5 {
  font-size: var(--h5-size);
}

h6 {
  font-size: var(--h6-size);
}

/* code, kbd, pre, samp, and var should be monospace
 * address and time have been made monospace as well to eliminate chances of
 * making mistakes when dealing with ambiguous characters like 0, O, 1, l, I */
address,
code,
kbd,
pre,
samp,
time,
var {
  font-family: var(--mono-font);
}

/* avoid using italic monospace fonts because most italic monospace fonts are
 * usually not truly italic, they're just slanted and often don't work well */
address,
dfn,
var {
  font-style: normal;
}

/* the top padding has been deliberately omitted otherwise the margin of
 * <blockquote> and its child element, most likely <p>, add up to make
 * <blockquote> look weird */
blockquote {
  border-left: 0.25em solid var(--fg-border);
  margin-left: 0;
  margin-right: 0;
  padding: 0 1em;
}

figure {
  margin-left: 0;
  margin-right: 0;
}

figcaption {
  text-align: center;
}

/* this rule can be improved using :has() */
:where(blockquote, p, span) + figcaption {
  text-align: initial;
}

/* compared to firefox, chromium's implementation of <hr> in light mode seems
 * broken; the line is a bit too thin */
hr {
  color: var(--fg-border);
  margin: 1em auto;
}

/* according to MDN, hyperlinks should be styled in the LVHA order where
 * L - :link
 * V - :visited
 * H - :hover
 * A - :active */
a:link {
  /* stylelint-disable declaration-block-no-redundant-longhand-properties */
  text-decoration-line: underline;
  text-decoration-style: solid;
  text-decoration-thickness: 1px;
  /* stylelint-enable declaration-block-no-redundant-longhand-properties */
}

/* superscripts and subscripts shouldn't affect line-height in paragraphs */
sub,
sup {
  line-height: 0;
}

/* <dt> should include a top margin to provide even spaces for <dd> when <dd>
 * has <p> as child element */
dt {
  margin: 1em 0;
}

/* if <dt> has a hyperlink, we need padding to meet Google a11y requirements of
 * 48px tap targets
 * we'll remove margin to mitigate the unintended effect of adding padding and
 * margin to <dt> */
dt a:any-link {
  display: inline-block;
  padding: 0.75em 0;
  margin: -0.75em 0;
}

/* consecutive <dt>'s shouldn't have padding for hyperlinks overlapping
 * use :is() to override the rule set before with higher specificity */
:is(dt + dt) a:any-link {
  padding-top: 0;
}

dd {
  margin: 1em 0 1em var(--first-level-space);
}

kbd {
  /* reduce font-size and remove block padding to prevent box-shadow clashing
   * with other inline elements */
  font-size: 90%;
  padding-top: 0;
  padding-bottom: 0;
}

/* italicize <del> and <ins> to distinguish them
 * inline quotes look better when italicized */
del,
ins,
q {
  font-style: italic;
}

/* --------------------------------- TABLES --------------------------------- */

table {
  border-collapse: collapse;
}

/* style tables provided they're not being used for syntax highlighting inside
 * a preformatted code block
 * it's not practical to account for all possible variations of tables inside
 * <pre> because some static site generator apparently inject useless <div>'s
 * inside or outside <pre> */
:not(pre, code, samp) > table {
  /* prevent tables from overflowing
   * the alternative is to set the width to 100% irrespective of the actual
   * width and set table-layout to fixed */
  display: block;

  /* add browser default margins to play safe */
  margin-bottom: 1em;
  margin-top: 1em;
  max-width: 100%;
  padding: 0.5em;
  overflow-x: auto;
}

/* as of version 103, chromium messes up border width if font size or display
 * has been scaled, firefox v101 and webkit epiphany works fine */
:not(pre, code, samp) > table :where(td, th) {
  border: 1px solid var(--fg-border);
  padding: 0.25em 0.5em;
}

/* don't wrap text when tables overflow */
:not(pre, code, samp) > table tbody {
  white-space: nowrap;
}

:not(pre, code, samp) > table thead {
  border-bottom: 3px solid var(--fg-border);
}

:not(pre, code, samp) > table tfoot {
  border-top: 3px solid var(--fg-border);
}

:not(pre, code, samp) > table[role="grid"] tbody tr:nth-child(odd) {
  background-color: var(--bg-link-a);
  color: var(--fg-table-grid);
}

/* ------------------------------- ACCORDION -------------------------------- */

/* add a border around <details> when it's closed */
details {
  border-radius: 0.25em;
  border: 1px solid var(--fg-border);
}

summary {
  padding: 0.75em 0.5em;
}

/* when <details> is open, add a block border to <summary> */
details[open] > summary {
  border-bottom: 1px solid var(--fg-border);
}

/* according to whatwg HTML spec, <details> can contain "flow content"
 * elements which includes many inline elements like <a> and <em>.
 * we'll account for a few commonly used block elements without an inherent
 * inline padding or margin and add inline padding to them */
details[open] > :where(article, aside, div, figure, footer, header, nav, p, section) {
  padding-left: 0.5em;
  padding-right: 0.5em;
}

/* ------------------------------- MULTIMEDIA ------------------------------- */

img,
picture {
  display: block;
  height: auto;
  margin-left: auto;
  margin-right: auto;
  max-width: 100%;
}

/* --------------------------------- SCREEN --------------------------------- */

@media screen {
  html {
    /* use browser default color scheme to prevent inappropriately styled
     * content
     *
     * this should ideally be defined inside a <meta> tag in HTML documents but
     * we'll use it here as well in case it isn't */
    color-scheme: light dark;

    /* prevent subtle layout shift when switching from a page without a
     * scrollbar to a page that needs a scrollbar  */
    overflow-y: scroll;
  }

  /* reduce the tab-size on mobile devices */
  @media (max-width: 26em) {
    html {
      tab-size: 2;
    }
  }

  /* use scrollbar-gutter if supported and reserve space for the scrollbar
   * this shouldn't affect browsers with overlay scrollbars and should be
   * safely ignored */
  @supports (scrollbar-gutter: stable both-edges) {
    html {
      overflow-y: auto;
      scrollbar-gutter: stable both-edges;
    }
  }

  @media (prefers-color-scheme: dark) {
    html {
      color-scheme: dark light;
    }
  }

  body {
    background-color: var(--bg-text);
    color: var(--fg-text);

    /* automatically add margins to elements when their max-width is defined */
    margin: auto;
  }

  /* handheld devices with a screen smaller than the 1st generation iPhone SE
   * should have full hyphenation enabled to increase the number of characters
   * displayed on a single line of text */
  @media (max-width: 20em) {
    body {
      /* stylelint-disable-next-line property-no-vendor-prefix */
      -webkit-hyphens: auto;
      hyphens: auto;
    }
  }

  /* prevent halation possibilities by lowering contrast for bolder text
   * don't lower contrast for <kbd> because it has lesser font-size */
  :not(pre, code, samp) > table th,
  b,
  dfn,
  dt,
  h1,
  h2,
  h3,
  h4,
  h5,
  legend,
  strong,
  var {
    color: var(--fg-hsb);
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    line-height: var(--height-head);
  }

  a:link {
    color: var(--fg-link);
    text-decoration-color: var(--fg-link-undl);
  }

  a:visited {
    color: var(--fg-link-v);
    text-decoration-color: var(--fg-link-v-undl);
  }

  /* minimize changes in state as much as possible while retaining a
   * distinguishing factor */
  a:hover {
    text-decoration-color: var(--fg-link);
  }

  a:active {
    background-color: var(--bg-link-a);
    color: var(--fg-link);
    text-decoration-color: var(--fg-link);
  }

  a:visited:hover {
    text-decoration-color: var(--fg-link-v-undl);
  }

  a:visited:active {
    color: var(--fg-link-v);
  }

  /* increase padding of hyperlinks inside heading tags to satisfy Google a11y
   * criteria for tap-targets */
  h2 > a:any-link {
    padding: 0.25em 0;
  }

  h3 > a:any-link {
    padding: 0.5em 0;
  }

  h4 > a:any-link {
    padding: 0.5em 0;
  }

  h5 > a:any-link {
    padding: 0.75em 0;
  }

  h6 > a:any-link {
    padding: 1em 0;
  }

  menu,
  ol,
  ul {
    padding-left: var(--first-level-space);
  }

  /* reduce the padding for nested lists
   * we've used :is() rather than :where() because the former pseudo-class
   * creates a specificity of 2 using the rule mentioned below while the latter
   * pseudo-class has a specificity of 0 which essentially makes it useless in
   * this context
   * this can be confirmed using
   * https://polypane.app/css-specificity-calculator/ */
  :is(menu, ol, ul) :is(menu, ol, ul) {
    padding-left: var(--second-level-space);
  }

  :not(ol[role="list"], ul[role="list"]) > :where(li + li) {
    margin-top: 0.25em;
  }

  pre {
    border-radius: 0.25em;
    border: 1px solid var(--fg-border);
    padding: 0.5em;

    /* the code snippet inside preformatted text does not obey
     * padding-inline-end if the code snippet overflows horizontally although
     * this issue can be fixed by making `pre > code` a block element, it will
     * mess up :focus-visible outline and keyboard navigation
     *
     * this issue isn't visible in Chromium but it is visible in Firefox and
     * WebKit browsers like Epiphany
     * https://bugzilla.mozilla.org/show_bug.cgi?id=1700858 */
    overflow-x: auto;
  }

  /* avoid using vanilla <abbr> because touch devices can't see the hover
   * tooltip provided by <abbr>
   * avoid using <u> for emphasis, use <strong> or <em>
   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u */
  a:any-link,
  abbr[title],
  u {
    text-underline-offset: 0.25em;
  }

  abbr {
    cursor: help;
  }

  /* make superscripts and subscripts with hyperlink children easier to tap */
  :where(sub, sup) > a:any-link {
    padding: 0.25em 0.5em;
  }

  :where(details, p, li, dd) > :where(code, del, ins, kbd, mark, samp, var) {
    border-radius: 0.25em;
    border: 1px solid var(--fg-border);
    padding: 1px 0.25em;
  }

  mark {
    background-color: var(--bg-mark);
    color: var(--fg-mark);
  }

  kbd {
    box-shadow: 0 2px 0 1px var(--bg-dis);
  }

  @media (prefers-color-scheme: dark) {
    kbd {
      box-shadow: 0 2px 0 1px var(--fg-dis);
    }
  }

  /* <del> and <ins> text shouldn't be mistaken for <s> and a hyperlink */
  del {
    color: var(--fg-del);
  }

  ins {
    color: var(--fg-ins);
    text-decoration: none;
  }

  /* ------------------------------ MULTIMEDIA ------------------------------ */

  /* it's better to extend audio widgets to the parent width */
  audio {
    width: 100%;
  }

  /* don't extend images, audio, and videos beyond the max-width of the parent
   * element */
  audio,
  video {
    display: block;
    height: auto;
    margin-left: auto;
    margin-right: auto;
    max-width: 100%;
  }

  /** -------------------------------- FORMS ------------------------------- **/

  button,
  input,
  select,
  textarea {
    font-family: inherit;
    font-size: inherit;
  }

  fieldset,
  form {
    margin: 1em 0;
  }

  fieldset,
  legend {
    border: 1px solid var(--fg-border);
  }

  legend {
    border-radius: 0.25em;
    padding: 1px 0.25em;
  }

  /* for consistency, change font-family of address, time, and anything where
   * ambiguity in characters isn't desirable to monospace font */
  input[type="date"],
  input[type="datetime"],
  input[type="datetime-local"],
  input[type="email"],
  input[type="month"],
  input[type="number"],
  input[type="tel"],
  input[type="week"] {
    font-family: var(--mono-font);
  }

  /** -------------------------------- FOCUS ------------------------------- **/

  /* make focus outlines accessible by increasing their width
   *
   * ideally, [tabindex="0"] should've been styled instead of <pre> and <table>
   * but I don't think popular static site generators generate <pre
   * tabindex="0"> by default when converting markdown/commonmark to HTML.
   * besides, there's reason to style `:focus` on <pre> and <table> even if
   * [tabindex="0"] isn't specified because if text overflows horizontally
   * inside these elements, firefox allows focusing on them and scrolling them
   * horizontally but chromium doesn't.
   * https://www.sarasoueidan.com/blog/focus-indicators/ */
  :where([tabindex="0"], a, pre, summary, table):focus {
    border-radius: 1px;

    /* color | style | width */
    outline: var(--fg-link) solid 3px;
  }

  /* this is needed to prevent summary from getting a border radius at the
   * bottom left and bottom right when <details> is [open] */
  details[open] > summary:focus {
    border-radius: 1px 1px 0 0;
    outline: var(--fg-link) solid 3px;
  }

  /* prevent conflict of audio and video element color and outline-color */
  :where(audio, video):focus {
    border-radius: 1px;
    outline: var(--fg-link) solid 3px;
    outline-offset: 0.25em;
  }

  /* if a browser supports :focus-visible (most mainstream browsers should),
   * use it instead of :focus */
  @supports selector(:focus-visible) {
    :is([tabindex="0"], a, pre, summary, table):focus:not(:focus-visible) {
      outline: none;
    }
  }
}

/* ---------------------------------- PRINT --------------------------------- */

@media print {
  html {
    /* never use sans-serif fonts on print unless it's possible to ensure that
     * the PDF will be viewed on screen */
    font: 100% / var(--height-text-print) var(--serif-font);
  }

  body {
    background-color: var(--bg-print);
    color: var(--fg-print);
  }

  a:any-link {
    color: var(--fg-print);
    /* stylelint-disable declaration-block-no-redundant-longhand-properties */
    text-decoration-color: var(--fg-print);
    text-underline-offset: 3px;
    /* stylelint-enable declaration-block-no-redundant-longhand-properties */
  }

  abbr[title],
  u {
    text-underline-offset: 3px;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    line-height: var(--height-head-print);
  }

  /* increase the inline padding and soft wrap the text inside <pre> if it
   * overflows */
  pre {
    margin: 1em 0 1em 2em;
    white-space: pre-wrap;
  }

  /* the list marker in summary isn't useful in print */
  summary {
    list-style-type: none;
  }
}

/* ----------------------------- AGNOSTIC LAYOUT ---------------------------- */

/* if <ol> or <ul> are explicitly assigned the role of "list", removed the
 * list-style-type markers and padding
 *
 * this layout is usually used to construct links inside <nav> using flex,
 * inline-flex, and inline-block layout */
:where(ol, ul)[role="list"] {
  list-style-type: none;
  padding: 0;
}

/* don't draw borders around emojis and kaomojis */
:where(code, pre)[role="img"] {
  border: 0;
}
