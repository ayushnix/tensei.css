/* css-tensei: main.css
 * SPDX-License-Identifier: NCSA */

:root {
  /* this font stack respects user choice and uses the fonts set in the web
   * browser settings
   *
   * if a "sensible" default is preferable, the following font stack might work
   * --sans-font: -apple-system, BlinkMacSystemFont, "Segoe UI", Inter, sans-serif;
   * --mono-font: Menlo, "Cascadia Mono", Consolas, "IBM Plex Mono", monospace;
   * --serif-font: Baskerville, "Cambria", "Source Serif Pro", serif; */
  --sans-font: sans-serif;
  --mono-font: monospace, monospace;
  --serif-font: serif;

  /* increase body text line-height to meet the minimum criteria of at least
   * 1.5 line height and to account for increased padding in some inline
   * elements such as <code>
   * reduce line-height of headings to account for their increased font size */
  --height-text: 1.6;
  --height-head: 1.2;
  --height-text-print: 1.3;
  --height-head-print: 1.1;

  /* start increasing the base font size of 16px (1rem) from a 390px width
   * viewport to a maximum of 18px (1.125rem) ending at 1024px width viewport
   *
   * this has been done to account for the difference in viewing distance
   * between a touch device and a monitor display. although 18px on touch
   * devices is fine, we can get a more characters and words on a single line
   * on touch devices if we scale back to 16px, which is the minimum acceptable
   * font size.
   *
   * using the clamp function saves us from defining multiple media query
   * breakpoints
   * https://www.aleksandrhovhannisyan.com/blog/fluid-type-scale-with-css-clamp/ */
  --base-font-size: clamp(1rem, calc(0.923rem + 0.315vw), 1.125rem);

  /* make <h*> sizes consistent and ignore the visual-only implementation of
   * the HTML5 document outlining algorithm which reduces the size of <h1>
   * successively when it's nested inside <article>, <aside>, <nav>, and
   * <section>
   *
   * although multiple <h1> tags shouldn't be used on a single HTML page, if
   * they are, we won't make the size of <h1> different
   *
   * the type scale of 1.2 (minor third) has been used to try and stay close to
   * the browser default size while also increasing the size of <h4>, <h5>, and
   * <h6> in an attempt to make them more useful
   * a type scale of 1.333 and above makes headings unusually large and
   * obnoxious
   * a height of 111 pixels in <h1> doesn't make sense
   *
   * https://www.smashingmagazine.com/2020/01/html5-article-section/ */
  --h1-size: 2.074rem;
  --h2-size: 1.728rem;
  --h3-size: 1.44rem;
  --h4-size: 1.2rem;
  --h5-size: 1rem;
  --h6-size: 0.833rem;

  /* fix the margin of <h1> inside <section>s */
  --h1-margin: 0.67rem;

  /* reduce the browser default inline margin of elements such as <dd>, <ol>,
   * and <ul> on mobile to make room for more characters on a line and
   * gradually increase the margin to the browser default on desktop sized
   * viewports */
  --first-level-space: clamp(1.5rem, calc(1.16rem + 1.7vw), 2.25rem);
  --second-level-space: clamp(1rem, calc(0.69rem + 1.56vw), 1.69rem);
}
